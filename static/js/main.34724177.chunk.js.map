{"version":3,"sources":["config.js","components/weather.js","components/todo/List.js","App.js","index.js"],"names":["module","exports","apiKey","Weather","useState","userInput","setUserInput","weatherData","setWeatherData","getWeather","endpoint","axios","get","keys","then","weather","data","catch","err","console","log","useEffect","year","Date","getFullYear","className","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","id","main","class","name","sys","country","toLocaleDateString","weekday","day","month","temp","toFixed","Math","floor","feels_like","src","icon","alt","temp_min","temp_max","wind","speed","gust","humidity","List","items","removeItem","editItem","map","item","title","onClick","App","setName","localStorage","getItem","JSON","parse","list","setList","idEditing","setIdEditing","editID","setEditID","setItem","stringify","Fragment","newItem","getTime","toString","length","filter","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34724177.chunk.js","sourcesContent":["module.exports ={\n    apiKey:\"a4bd3fc92305c72d2b1b2c5d8dda7b8f\"\n};","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport keys from \"../config\";\nconst Weather = () => {\n  const baseUrl = \"https://api.openweathermap.org/data/2.5/\";\n\n  const [userInput, setUserInput] = useState(\"leipzig\");\n  const [weatherData, setWeatherData] = useState({});\n  const getWeather = (endpoint) => {\n    axios\n      .get(`${baseUrl}weather?q=${endpoint}&units=metric&appid=${keys.apiKey}`)\n      .then((weather) => setWeatherData(weather.data))\n\n      .catch((err) => console.log(\"Please type an existing city name\"));\n  };\n\n  const changeHandle = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getWeather(userInput);\n  };\n\n  //find the direction\n\n  /*  \n          const windDir = weatherData.wind.deg;\n           const windD = [\n        { direction: \"N\", start: 310, end: 360 },\n        { direction: \"N\", start: 1, end: 50 },\n        { direction: \"W\", start: 230, end: 309 },\n        { direction: \"S\", start: 130, end: 229 },\n        { direction: \"E\", start: 49, end: 129 },\n      ];\n        \n       \n      const findDirection = windD.find(\n        (dir) => dir.start <= windDir && dir.end >= windDir\n      );\n      */\n\n  useEffect(() => {\n    getWeather(userInput);\n  }, []);\n\n  // the time\n  const year = new Date();\n  const getFullYear = year.getFullYear();\n  const getDayName = () => {\n    return year.toLocaleDateString(\"en-US\", { weekday: \"long\" });\n  };\n  const getTime = () => {\n    return year.toLocaleDateString(\"en-US\", { day: \"numeric\" });\n  };\n  const getMonthName = () => {\n    return year.toLocaleDateString(\"en-US\", { month: \"long\" });\n  };\n\n  return (\n    <div className=\"app-wrap\">\n      <header>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={userInput}\n            onChange={changeHandle}\n            placeholder=\"enter a city name\"\n          />\n          <input type=\"submit\" id=\"submit\" value=\"Search\" />\n        </form>\n      </header>\n      {weatherData?.main && (\n        <main>\n          <section class=\"location\">\n            <div class=\"city\">\n              {\" \"}\n              {weatherData.name}, {weatherData.sys.country}\n            </div>\n            <div class=\"date\">\n              {getDayName()} {getTime()} {getMonthName()} {getFullYear}\n            </div>\n          </section>\n          <div class=\"current\">\n            <div class=\"temp\">\n              <span class=\"tempN\" id=\"temp\">\n                {weatherData.main.temp.toFixed()}\n              </span>\n              <span>°</span>\n            </div>\n            <div class=\"feelsContainer\">\n              Feels like{\" \"}\n              <span class=\"feels\">\n                {Math.floor(weatherData.main.feels_like)}\n              </span>\n              <span>°</span>\n            </div>\n\n            <img\n              src={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\n              class=\"icon\"\n              alt=\"\"\n            />\n\n            <div class=\"weather\">{weatherData.weather[0].main}</div>\n            <div class=\"hi-low\">\n              {weatherData.main.temp_min.toFixed()} /{\" \"}\n              {weatherData.main.temp_max.toFixed()}\n            </div>\n            <div class=\"wind\">\n              <i class=\"fas fa-wind\"></i>\n              <div>\n                Wind direction: <span class=\"windDeg\">N</span>\n              </div>\n              <div>\n                Speed:{\" \"}\n                <span class=\"windSpeed\">{weatherData.wind.speed}km/h</span>\n              </div>\n              <div>\n                Max-gust:{\" \"}\n                <span class=\"windGust\">\n                  {Math.floor(weatherData.wind.gust)}km/h\n                </span>\n              </div>\n            </div>\n            <div class=\"hum-img\">\n              <i class=\"fas fa-water\"></i>\n\n              <div class=\"humidity\"> humidity:{weatherData.main.humidity}%</div>\n            </div>\n          </div>\n        </main>\n      )}\n    </div>\n  );\n};\nexport default Weather;\n","import React from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\n\nconst List = ({ items, removeItem, editItem }) => {\n  return (\n    <div>\n      {items.map((item) => {\n        const { id, title } = item;\n\n        return (\n          <ul key={id} className=\"listDesign\">\n            <li>\n              {title}\n              <div className=\"editAndDelete\">\n                <button\n                  type=\"button\"\n                  onClick={() => editItem(id)}\n                  className=\"btn\"\n                >\n                  <FaEdit className=\"btn-edit\" />\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn\"\n                  onClick={() => removeItem(id)}\n                >\n                  <FaTrash className=\"btn-delete\" />\n                </button>\n              </div>\n            </li>\n          </ul>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport Weather from \"./components/weather\";\nimport List from \"./components/todo/List\";\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"list\");\n  if (list) {\n    return (list = JSON.parse(localStorage.getItem(\"list\")));\n  } else {\n    return [];\n  }\n};\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState(getLocalStorage());\n  const [idEditing, setIdEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n  }, [list]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name && idEditing) {\n      setList(\n        list.map((item) => {\n          if (item.id === editID) {\n            return { ...item, title: name };\n          }\n          return item;\n        })\n      );\n      setName(\"\");\n      setEditID(null);\n      setIdEditing(false);\n    } else {\n      const newItem = { id: new Date().getTime().toString(), title: name };\n      setList([...list, newItem]);\n      setName(\"\");\n    }\n  };\n\n  const removeItem = (id) => {\n    setList(list.filter((item) => item.id !== id));\n  };\n\n  const editItem = (id) => {\n    const editItem = list.find((item) => item.id === id);\n    setIdEditing(true);\n    setEditID(id);\n    setName(editItem.title);\n  };\n\n  const clearList = () => {\n    setList([]);\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <section className=\"section-center\">\n          <form onSubmit={handleSubmit}>\n            <h3>TODO LIST</h3>\n            <div className=\"form-design\">\n              <input\n                className=\"inputDesign\"\n                type=\"text\"\n                placeholder=\"ex: Coding\"\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n              />\n              <button type=\"submit\" className=\"btn\">\n                {idEditing ? \"Edit\" : \"Search\"}\n              </button>\n            </div>\n          </form>\n          {list.length > 0 && (\n            <div className=\"app\">\n              <List items={list} removeItem={removeItem} editItem={editItem} />\n              <div>\n                <button onClick={clearList} className=\"clearList\">\n                  Clear Items\n                </button>\n              </div>\n            </div>\n          )}\n        </section>\n        <Weather />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./sass/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}